name: CI testing - complete

# see: https://help.github.com/en/actions/reference/events-that-trigger-workflows
on:  # Trigger the workflow on push or pull request, but only for the master branch
  push:
    branches: [master, "release/*"]
  pull_request:
    branches: [master, "release/*"]
    types: [opened, reopened, ready_for_review, synchronize]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.head_ref }}
  cancel-in-progress: ${{ ! (github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/heads/release/')) }}

defaults:
  run:
    shell: bash

jobs:
  check-diff:
    if: github.event.pull_request.draft == false
    uses: ./.github/workflows/focus-diff.yml

  pytest:
    runs-on: ${{ matrix.os }}
    needs: check-diff
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, macOS-11, windows-2022]
        python-version: ['3.7', '3.8', '3.10']
        requires: ['oldest', 'latest']
        exclude:
          - {python-version: '3.7', requires: 'latest'}
          - {python-version: '3.10', requires: 'oldest'}
          - {python-version: '3.10', os: 'windows'}  # todo: https://discuss.pytorch.org/t/numpy-is-not-available-error/146192
        include:
          - {python-version: '3.10', requires: 'latest', os: 'ubuntu-22.04'}
          - {python-version: '3.10', requires: 'latest', os: 'macOS-12'}
    env:
      PYTEST_ARTEFACT: test-results-${{ matrix.os }}-py${{ matrix.python-version }}-${{ matrix.requires }}.xml
      PYTORCH_URL: https://download.pytorch.org/whl/cpu/torch_stable.html

    # Timeout: https://stackoverflow.com/a/59076067/4521646
    # seems that MacOS jobs take much more than orger OS
    timeout-minutes: 95

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    # Github Actions: Run step on specific OS: https://stackoverflow.com/a/57948488/4521646
    - name: Setup macOS
      if: runner.os == 'macOS'
      run: |
        python -c "print('UNITTEST_TIMEOUT=--timeout=120')" >> $GITHUB_ENV
        brew install gcc libomp ffmpeg # https://github.com/pytorch/pytorch/issues/20030
    - name: Setup Linux
      if: runner.os == 'Linux'
      run: |
        python -c "print('UNITTEST_TIMEOUT=--timeout=120')" >> $GITHUB_ENV
        sudo apt update --fix-missing
        sudo apt install -y ffmpeg
    - name: Setup Windows
      if: runner.os == 'windows'
      run: |
        choco install ffmpeg

    - uses: ./.github/actions/caching
      with:
        os: ${{ runner.os }}
        requires: ${{ matrix.requires }}
        python-version: ${{ matrix.python-version }}

    - name: Install pkg
      run: |
        pip --version
        pip install -e . -r requirements/test.txt --upgrade --find-links $PYTORCH_URL
        pip list

    - name: DocTests
      working-directory: ./src
      # NOTE: run coverage on tests does not propagate failure status for Win, https://github.com/nedbat/coveragepy/issues/1003
      run: python -m pytest torchmetrics

    - name: Freeze PIL (hotfix)
      # import of PILLOW_VERSION which they recently removed in v9.0 in favor of __version__
      run: pip install "Pillow<9.0"  # It messes with torchvision

    - name: Install all dependencies
      run: |
        python ./requirements/adjust-versions.py requirements.txt
        python ./requirements/adjust-versions.py requirements/image.txt
        pip install --requirement requirements/devel.txt -U --find-links $PYTORCH_URL
        pip list

    - run: echo "::set-output name=TORCH::$(python -c 'import torch ; print(torch.__version__)' 2>&1)"
      id: info

    - uses: ./.github/actions/unittesting
      if: ${{ needs.check-diff.outputs.test-dirs != '' }}
      with:
        os: ${{ runner.os }}
        requires: ${{ matrix.requires }}
        python-version: ${{ matrix.python-version }}
        pytorch-version: ${{ steps.info.outputs.TORCH }}
        dirs: ${{ needs.check-diff.outputs.test-dirs }}
        test-timeout: ${{ env.UNITTEST_TIMEOUT }}

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: tests/coverage.xml
        flags: cpu,pip,unitests,${{ runner.os }},python${{ matrix.python-version }},torch${{ steps.info.outputs.TORCH }}
        env_vars: OS,PYTHON
        name: codecov-umbrella
        fail_ci_if_error: false

name: Complex caching
description: some more complex caching - pip & conda & hf

inputs:
  os:
    description: operation system
    required: true
  python-version:
    description: Python version
    required: true
  requires:
    description: define oldest or latest
    required: false
    default: ""
  offset:
    description: some extra hash for pip cache
    required: false
    default: ""
  interval:
    description: cache hash reset interval in days
    required: false
    default: "7"

runs:
  using: "composite"
  steps:

  - name: install assitant's deps
    run: |
      pip install fire requests packaging
    shell: bash

  - name: Set min. dependencies
    if: inputs.requires == 'oldest'
    run: |
      python .github/assistant.py set-oldest-versions
      cat requirements.txt
    shell: bash

  - run: python -c "import time ; days = time.time() / 60 / 60 / 24 ; print(f'TIME_PERIOD={int(days / ${{ inputs.interval }})}')" >> $GITHUB_ENV
    if: inputs.requires == 'latest'
    shell: bash

  # Note: This uses an internal pip API and may not always work
  # https://github.com/actions/cache/blob/master/examples.md#multiple-oss-in-a-workflow
  - name: Determine caches
    env:
      PWD: $(pwd)
    run: |
      python -c "from pip._internal.locations import USER_CACHE_DIR; print('PIP_CACHE_DIR=' + USER_CACHE_DIR)" >> $GITHUB_ENV
      python -c "import os ; print('TRANSFORMERS_CACHE=' + os.path.join('$PWD', 'ci-cache_huggingface'))" >> $GITHUB_ENV
    shell: bash

  - name: Cache pip
    uses: actions/cache@v3
    with:
      path: $PIP_CACHE_DIR
      key: ${{ inputs.os }}-py${{ inputs.python-version }}-pip-td${TIME_PERIOD}-${{ inputs.offset }}-${{ hashFiles('requirements.txt') }}
      restore-keys: ${{ inputs.os }}-py${{ inputs.python-version }}-pip-td${TIME_PERIOD}-${{ inputs.offset }}-

  - name: Cache conda
    uses: actions/cache@v3
    if: inputs.os == 'Linux'
    with:
      path: ~/conda_pkgs_dir
      key: py${{ inputs.python-version }}-conda-td${TIME_PERIOD}-${{ inputs.offset }}
      restore-keys: py${{ inputs.python-version }}-conda-td${TIME_PERIOD}-${{ inputs.offset }}

  - name: Cache HF
    uses: actions/cache@v3
    with:
      path: $TRANSFORMERS_CACHE
      key: ${{ inputs.os }}-py${{ inputs.python-version }}-cache-transformers

  - name: Post HF
    run: |
      mkdir -p $TRANSFORMERS_CACHE
      ls -l .
      ls -l $TRANSFORMERS_CACHE
    shell: bash
